/**
 * Definition for a point.
 * struct Point {
 *     int x;
 *     int y;
 *     Point() : x(0), y(0) {}
 *     Point(int a, int b) : x(a), y(b) {}
 * };
 */
class Solution {
public:
    int maxPoints(vector<Point> &points) {
        int size = points.size();
        for(int i=0; i<size; i++)
            for(int j=0; j<size; j++){
                double direction = getDirection(point[i], point[j]);
                if(D.)
            }
    }
    
    double getDirection(const Point &start, const Point &end){
    	if(start.x == end.x)
    		return -1;
        double t = double(end.y-start.y)/double(end.x-start.x);
        	return t>0 ? t:(0-t);
    }

    bool equal(double a, double b){
        if(a-b < 0.0000001 || b-a < 0.000001)   return true;
        else    return false;
    }

private:
    map<double, int> D;
};
